#!/bin/bash

# source config
OWN_DIR=$(dirname $(readlink -f $0))
if [ ! -e $OWN_DIR/rsync_backup.conf ]; then
	echo "no config file available."
	exit 1
fi
source $OWN_DIR/rsync_backup.conf

# get default values if variables are not set in config
: ${RSYNC_BACKUP_SOURCE:=$HOME}
: ${RSYNC_BACKUP_DAILYDIR:=daily}
: ${RSYNC_BACKUP_WEEKLYDIR:=weekly}
: ${RSYNC_BACKUP_MONTHLYDIR:=monthly}
if [ -z $RSYNC_BACKUP_TARGET ]; then
	echo "no target directory defined. Backup can't be performed"
	exit 1
fi

includes="--include-from=$OWN_DIR/includes"
excludes="--exclude-from=$OWN_DIR/excludes"
options="-rav --progress"

if [ $# -ge 1 ]; then

	unset custom_arguments
	args=("$@")
	for i in "${args[@]}"
	do
		case "$i" in
			"daily")
				daily="true"
			;;
			"weekly")
				weekly="true"

			;;
			"monthly")
				monthly="true"
			;;

			*)
				# save other arguments
				custom_arguments+=($i)
			;;
		esac
	done

	options+=" ${custom_arguments[@]}"
	cmd="rsync $options"
	cmd_args="$includes $excludes"
	cmd_source_target="$RSYNC_BACKUP_SOURCE $RSYNC_BACKUP_TARGET"
	echo "execute command: $cmd $cmd_args $cmd_source_target"
	echo ""
	echo "lets go? cancel with Ctrl+C"
	read

	if [ ! -z "$daily" ]; then
		echo "start daily backup..."
		$cmd $cmd_args $cmd_source_target/$RSYNC_BACKUP_DAILYDIR
	fi


	if [ ! -z "$weekly" ]; then
		echo "start weekly backup..."
		# first copy to weekly
		$cmd $RSYNC_BACKUP_TARGET/$RSYNC_BACKUP_DAILYDIR/* $RSYNC_BACKUP_TARGET/$RSYNC_BACKUP_WEEKLYDIR
		# clean up dailydir
                $cmd $cmd_args --delete $cmd_source_target/$RSYNC_BACKUP_DAILYDIR
	fi

	if [ ! -z "$monthly" ]; then
		echo "start montly backup..."
		if [ ! -d $RSYNC_BACKUP_TARGET/$RSYNC_BACKUP_MONTHLYDIR ]; then
			mkdir -p $RSYNC_BACKUP_TARGET/$RSYNC_BACKUP_MONTHLYDIR
		fi
		# create tar from latest weekly backup
		tar -cvzf $RSYNC_BACKUP_TARGET/$RSYNC_BACKUP_MONTHLYDIR/$(date +%Y%m%d).tar.gz \
			$RSYNC_BACKUP_TARGET/$RSYNC_BACKUP_WEEKLYDIR/*
		# clean up weeklydir
		$cmd $cmd_args --delete $cmd_source_target/$RSYNC_BACKUP_WEEKLYDIR
	fi
fi


exit 0
